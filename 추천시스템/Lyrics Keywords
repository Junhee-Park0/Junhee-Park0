{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "1f6CGtG_uH3b"
      ]
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "lJSOSl77kxW4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "23220195-274a-4f6b-c4e5-b5c143441b04"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import re\n",
        "import pickle\n",
        "\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "chart = pd.read_pickle('/content/drive/MyDrive/2. KOREA UNIV./KUBIG/2024 Fall/추천시스템/Week 6 - 데이터 완성/chart.pickle')\n",
        "chart['가사'] = chart['가사'].str.replace('\\n',' ')\n",
        "chart.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "wOZEktpklHTC",
        "outputId": "5bc580be-16ac-4056-f49c-ad84f072ee5a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     연도                                 제목                            가수  \\\n",
              "0  2023      I Don't Think That I Like Her                  Charlie Puth   \n",
              "1  2023                        Dangerously                  Charlie Puth   \n",
              "2  2023                               STAY  The Kid LAROI, Justin Bieber   \n",
              "3  2023                   That's Hilarious                  Charlie Puth   \n",
              "4  2023  Steal The Show (From \"Elemental\")                          Lauv   \n",
              "\n",
              "                                                  가사  발매년도  \\\n",
              "0  Get her name and get her number Find out all o...  2022   \n",
              "1  This is gonna hurt but I blame myself first ca...  2016   \n",
              "2  I do the same thing I told you that I never wo...  2021   \n",
              "3  Look how all the tables Look how all the table...  2022   \n",
              "4  Started out on a one-way train Always knew whe...  2023   \n",
              "\n",
              "                      장르    좋아요 수  \n",
              "0                    POP  214,990  \n",
              "1                    POP  217,897  \n",
              "2                    POP  293,599  \n",
              "3                    POP  184,630  \n",
              "4  POP, 애니메이션/웹툰, 키즈, 만화  185,174  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-85a2f880-8a9e-4bda-a35f-4768e830a660\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>연도</th>\n",
              "      <th>제목</th>\n",
              "      <th>가수</th>\n",
              "      <th>가사</th>\n",
              "      <th>발매년도</th>\n",
              "      <th>장르</th>\n",
              "      <th>좋아요 수</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2023</td>\n",
              "      <td>I Don't Think That I Like Her</td>\n",
              "      <td>Charlie Puth</td>\n",
              "      <td>Get her name and get her number Find out all o...</td>\n",
              "      <td>2022</td>\n",
              "      <td>POP</td>\n",
              "      <td>214,990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2023</td>\n",
              "      <td>Dangerously</td>\n",
              "      <td>Charlie Puth</td>\n",
              "      <td>This is gonna hurt but I blame myself first ca...</td>\n",
              "      <td>2016</td>\n",
              "      <td>POP</td>\n",
              "      <td>217,897</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2023</td>\n",
              "      <td>STAY</td>\n",
              "      <td>The Kid LAROI, Justin Bieber</td>\n",
              "      <td>I do the same thing I told you that I never wo...</td>\n",
              "      <td>2021</td>\n",
              "      <td>POP</td>\n",
              "      <td>293,599</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2023</td>\n",
              "      <td>That's Hilarious</td>\n",
              "      <td>Charlie Puth</td>\n",
              "      <td>Look how all the tables Look how all the table...</td>\n",
              "      <td>2022</td>\n",
              "      <td>POP</td>\n",
              "      <td>184,630</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2023</td>\n",
              "      <td>Steal The Show (From \"Elemental\")</td>\n",
              "      <td>Lauv</td>\n",
              "      <td>Started out on a one-way train Always knew whe...</td>\n",
              "      <td>2023</td>\n",
              "      <td>POP, 애니메이션/웹툰, 키즈, 만화</td>\n",
              "      <td>185,174</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85a2f880-8a9e-4bda-a35f-4768e830a660')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-85a2f880-8a9e-4bda-a35f-4768e830a660 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-85a2f880-8a9e-4bda-a35f-4768e830a660');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c53e6364-9544-4ec3-8543-2eccb742ef98\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c53e6364-9544-4ec3-8543-2eccb742ef98')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c53e6364-9544-4ec3-8543-2eccb742ef98 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "chart",
              "summary": "{\n  \"name\": \"chart\",\n  \"rows\": 6414,\n  \"fields\": [\n    {\n      \"column\": \"\\uc5f0\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 44,\n        \"samples\": [\n          \"1986\",\n          \"1994\",\n          \"1993\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc81c\\ubaa9\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4991,\n        \"samples\": [\n          \"Kiss Me\",\n          \"\\ud558\\uc9c0 \\ubabb\\ud55c \\ub9d0\",\n          \"\\uc544\\ub984\\ub2e4\\uc6b4 \\uc774\\ubcc4 \\u2161 (PSY Ver.)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac00\\uc218\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1886,\n        \"samples\": [\n          \"Mary J. Blige\",\n          \"Ace Of Base\",\n          \"Big Mountain\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac00\\uc0ac\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5275,\n        \"samples\": [\n          \"Mummy don't know daddy's getting hot At the body shop Doing something unholy Lucky, lucky girl, she got married to a boy like you She'd kick you out if she ever, ever knew 'Bout all the **** you tell me that you do Dirty, dirty boy, you know everyone is talking on the scene I hear them whisperin' 'bout the places that you been And how you don't know how to keep your business clean Mummy don't know daddy's getting hot At the body shop Doing somethin' unholy He's sat back while she's droppin' it She'd be poppin' it Yeah, she put it down slowly Oh, eh, oh, eh, oh, he left his kids at home So he can get that Mummy don't know daddy's getting hot At the body shop Doing somethin' unholy (Woo) Mmm, daddy, daddy, if you want it, drop the addy Give me love, give me Fendi, my Balenciaga daddy You gon' need to bag it up, 'cause I'm spending on Rodeo (Woo) You can watch me back it up, I'll be gone in the AM And he, he get me Prada, get me Miu Miu like Rihanna He always call me 'cause I never cause no drama And when you want it, baby I know I got you covered And when you need it, baby Just jump under the covers Mummy don't know daddy's getting hot At the body shop Doing somethin' unholy He's sat back while she's droppin' it She'd be poppin' it Yeah, she put it down slowly Oh, eh, oh, eh, oh, he left his kids at home So he can get that Mummy don't know daddy's getting hot At the body shop Doing somethin' unholy\",\n          \"yeah, yeah, yeah, yeah, yeah, yeah, yeah lets go (ha-ha-haha-ha) oooh n dey say ooh ooh oooh (ha-ha-haha-ha) oooh n dey say ooh ooh oooh hold up, stop ma, let me get a look you damn girl aint see u since prom come to think bout it cant belive it been that long girl i heard your man locked down how long you gone oh that long how the hell he get time like that 3 strikes for possesion oh he aint coming back he left you with two kids and bills all around plus she found out he had another chick accross town its always the darkness before the sun rising and you gotta stay strong for the kids in there eyes and please dont despise and go against all brothers and have a hatered in heart and take it out on another i hate to sound so rash tho mama but keep your head up but your gonna make it i promise you keep your head up and that, that dont kill you only makes you stronger and the will to succeed only feed the hunger for real, for real, for real, (ha-haha-ha-ha) hey ooh n dey say ooh oooh ooh (ha-haha-ha-ha) n dey say ooh oooh ooh i was at the gas station and a man walked passed with a sign we work for food, clothes or cash and he asked if he could pump my gas so i let him clean the windsheild and throw out the trash so i let him hey i even asked the brother his name, where he was from, got kids and whats there ages kinda stood for a second he looked suprised that anyone would even take an intrest in his life he said brother there the only words iv heard in the last year that wasnt lower than get the f away from her how could something so simple as general conversation mean much more than general conversation hey you could tell life had been beating him down like he was in the title fighting this might be his last round sometimes the easiest things we take for granted til there gone we realised we even had it for real, for real, for real (ha-haha-ha-ha) hey ooh n dey say ooh oooh ooh (ha-haha-ha-ha) n dey say ooh oooh ooh i used to think that life had a plan for me til i realised that it be playing by me see thats the key i only deal with what i can see coz over history mystery brought us nothing but misery name on people and i and the name of the lord that in any natural disaster, diesease or gang wars before guns there was swords and they was killing eachother aint much changed to this day we still killing eachother killing our brothers while another mother cries for help man we need to help a brother find himself hater, liar 1 2 3 hey theres something everybrother should see and thats for real, and thats for real, and thats for real hey ooh ooh ohh n dey say ooh ooh ohh (ha-haha-ha-ha) hey ooh ooh ohh n dey say ooh ooh ohh (ha-haha-ha-ha)\",\n          \"\\ub0b4\\uac00 \\uac00\\ub294 \\uc774 \\uae38\\uc774 \\uc5b4\\ub514\\ub85c \\uac00\\ub294\\uc9c0 \\uc5b4\\ub514\\ub85c \\ub0a0 \\ub370\\ub824\\uac00\\ub294\\uc9c0 \\uadf8\\uacf3\\uc740 \\uc5b4\\ub518\\uc9c0 \\uc54c \\uc218 \\uc5c6\\uc9c0\\ub9cc \\uc54c \\uc218 \\uc5c6\\uc9c0\\ub9cc \\uc54c \\uc218 \\uc5c6\\uc9c0\\ub9cc \\uc624\\ub298\\ub3c4 \\ub09c \\uac78\\uc5b4\\uac00\\uace0 \\uc788\\ub124 \\uc0ac\\ub78c\\ub4e4\\uc740 \\uae38\\uc774 \\ub2e4 \\uc815\\ud574\\uc838 \\uc788\\ub294\\uc9c0 \\uc544\\ub2c8\\uba74 \\uc790\\uae30\\uac00 \\uc790\\uc2e0\\uc758 \\uae38\\uc744 \\ub9cc\\ub4e4\\uc5b4 \\uac00\\ub294\\uc9c0 \\uc54c \\uc218 \\uc5c6\\uc9c0\\ub9cc \\uc54c \\uc218 \\uc5c6\\uc9c0\\ub9cc \\uc54c \\uc218 \\uc5c6\\uc9c0\\ub9cc \\uc774\\ub807\\uac8c \\ub610 \\uac78\\uc5b4\\uac00\\uace0 \\uc788\\ub124 \\ub098\\ub294 \\uc65c \\uc774\\uae38\\uc5d0 \\uc11c \\uc788\\ub098 \\uc774\\uac8c \\uc815\\ub9d0 \\ub098\\uc758 \\uae38\\uc778\\uac00 \\uc774 \\uae38\\uc758 \\ub05d\\uc5d0\\uc11c \\ub0b4 \\uafc8\\uc740 \\uc774\\ub904\\uc9c8\\uae4c \\ubb34\\uc5c7\\uc774 \\ub0b4\\uac8c \\uc815\\ub9d0 \\uae30\\uc068\\uc744 \\uc8fc\\ub294\\uc9c0 \\ub3c8\\uc778\\uc9c0 \\uba85\\uc60c\\uc9c0 \\uc544\\ub2c8\\uba74 \\ub0b4\\uac00 \\uc0ac\\ub791\\ud558\\ub294 \\uc0ac\\ub78c\\ub4e4\\uc778\\uc9c0 \\uc54c\\uace0 \\uc2f6\\uc9c0\\ub9cc \\uc54c\\uace0 \\uc2f6\\uc9c0\\ub9cc \\uc54c\\uace0 \\uc2f6\\uc9c0\\ub9cc \\uc544\\uc9c1\\ub3c4 \\ub2f5\\uc744 \\ub0b4\\ub9b4 \\uc218 \\uc5c6\\ub124 \\uc790\\uc2e0\\uc788\\uac8c \\ub098\\uc758 \\uae38\\uc774\\ub77c\\uace0 \\ub9d0\\ud558\\uace0 \\uc2f6\\uace0 \\uadf8\\ub807\\uac8c \\ubbff\\uace0 \\ub3cc\\uc544\\ubcf4\\uc9c0 \\uc54a\\uace0 \\ud6c4\\ud68c\\ub3c4 \\ud558\\uc9c0 \\uc54a\\uace0 \\uac77\\uace0 \\uc2f6\\uc9c0\\ub9cc \\uac77\\uace0 \\uc2f6\\uc9c0\\ub9cc \\uac77\\uace0 \\uc2f6\\uc9c0\\ub9cc \\uc544\\uc9c1\\ub3c4 \\ub098\\ub294 \\uc790\\uc2e0\\uc774 \\uc5c6\\ub124 \\ub098\\ub294 \\uc65c \\uc774 \\uae38\\uc5d0 \\uc11c \\uc788\\ub098 \\uc774\\uac8c \\uc815\\ub9d0 \\ub098\\uc758 \\uae38\\uc778\\uac00 \\uc774 \\uae38\\uc758 \\ub05d\\uc5d0\\uc11c \\ub0b4 \\uafc8\\uc740 \\uc774\\ub904\\uc9c8\\uae4c \\ub098\\ub294 \\ubb34\\uc5c7\\uc744 \\uafc8\\uafb8\\ub294\\uac00 \\uadf8\\uac74 \\ub204\\uad74 \\uc704\\ud55c \\uafc8\\uc77c\\uae4c \\uadf8 \\uafc8\\uc744 \\uc774\\ub8e8\\uba74 \\ub09c \\uc6c3\\uc744 \\uc218 \\uc788\\uc744\\uae4c \\uc624 \\uc9c0\\uae08 \\ub0b4\\uac00 \\uc5b4\\ub514\\ub85c \\uc5b4\\ub514\\ub85c \\uac00\\ub294 \\uac78\\uae4c \\ub098\\ub294 \\ubb34\\uc5c7\\uc744 \\uc704\\ud574 \\uc0b4\\uc544\\uc57c \\uc0b4\\uc544\\uc57c\\ub9cc \\ud558\\ub294\\uac00 \\ub098\\ub294 \\uc65c \\uc774 \\uae38\\uc5d0 \\uc11c \\uc788\\ub098 \\uc774\\uac8c \\uc815\\ub9d0 \\ub098\\uc758 \\uae38\\uc778\\uac00 \\uc774 \\uae38\\uc758 \\ub05d\\uc5d0\\uc11c \\ub0b4 \\uafc8\\uc740 \\uc774\\ub904\\uc9c8\\uae4c \\ub098\\ub294 \\ubb34\\uc5c7\\uc744 \\uafc8\\uafb8\\ub294\\uac00 \\uadf8\\uac74 \\ub204\\uad74 \\uc704\\ud55c \\uafc8\\uc77c\\uae4c \\uadf8 \\uafc8\\uc744 \\uc774\\ub8e8\\uba74 \\ub09c \\uc6c3\\uc744 \\uc218 \\uc788\\uc744\\uae4c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubc1c\\ub9e4\\ub144\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 46,\n        \"samples\": [\n          \"1985\",\n          \"1997\",\n          \"2000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc7a5\\ub974\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 60,\n        \"samples\": [\n          \"POP\",\n          \"R&B/Soul\",\n          \"\\ud0a4\\uc988, \\ucc3d\\uc791\\ub3d9\\uc694\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc88b\\uc544\\uc694 \\uc218\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4366,\n        \"samples\": [\n          \"1,071\",\n          \"84,585\",\n          \"2,715\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "genre = pd.read_pickle('/content/drive/MyDrive/2. KOREA UNIV./KUBIG/2024 Fall/추천시스템/Week 6 - 데이터 완성/genre.pickle')\n",
        "genre['가사'] = genre['가사'].str.replace('\\n',' ')\n",
        "genre.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "rZT7vvAFmllv",
        "outputId": "53126716-5fae-440c-a5d1-808b0845754e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   장르                               제목    가수  \\\n",
              "0  댄스                              비행기   거북이   \n",
              "1  댄스  미리 메리 크리스마스 (Feat. 천둥 Of MBLAQ)   아이유   \n",
              "2  댄스                             좋은 날   아이유   \n",
              "3  댄스                     I Don't Care  2NE1   \n",
              "4  댄스                             너랑 나   아이유   \n",
              "\n",
              "                                                  가사  발매년도    좋아요 수  \n",
              "0  Yes Turtles Forth album New mind New song 철없을 ...  2006  112,502  \n",
              "1  하얀 눈이 내려올 때면 온 세상이 물들을 때면 눈꽃이 피어나 또 빛이 나 눈이 부신...  2010  174,230  \n",
              "2  어쩜 이렇게 하늘은 더 파란 건지 오늘따라 왜 바람은 또 완벽한지 그냥 모르는 척 ...  2010  154,444  \n",
              "3  hey playboy it's about time and your time's up...  2009   79,758  \n",
              "4  시곌 보며 속삭이는 비밀들 간절한 내 맘속 이야기 지금 내 모습을 해쳐도 좋아 나를...  2011  155,098  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a89d1472-1c0c-4544-81db-ed47716f7c6c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>장르</th>\n",
              "      <th>제목</th>\n",
              "      <th>가수</th>\n",
              "      <th>가사</th>\n",
              "      <th>발매년도</th>\n",
              "      <th>좋아요 수</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>댄스</td>\n",
              "      <td>비행기</td>\n",
              "      <td>거북이</td>\n",
              "      <td>Yes Turtles Forth album New mind New song 철없을 ...</td>\n",
              "      <td>2006</td>\n",
              "      <td>112,502</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>댄스</td>\n",
              "      <td>미리 메리 크리스마스 (Feat. 천둥 Of MBLAQ)</td>\n",
              "      <td>아이유</td>\n",
              "      <td>하얀 눈이 내려올 때면 온 세상이 물들을 때면 눈꽃이 피어나 또 빛이 나 눈이 부신...</td>\n",
              "      <td>2010</td>\n",
              "      <td>174,230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>댄스</td>\n",
              "      <td>좋은 날</td>\n",
              "      <td>아이유</td>\n",
              "      <td>어쩜 이렇게 하늘은 더 파란 건지 오늘따라 왜 바람은 또 완벽한지 그냥 모르는 척 ...</td>\n",
              "      <td>2010</td>\n",
              "      <td>154,444</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>댄스</td>\n",
              "      <td>I Don't Care</td>\n",
              "      <td>2NE1</td>\n",
              "      <td>hey playboy it's about time and your time's up...</td>\n",
              "      <td>2009</td>\n",
              "      <td>79,758</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>댄스</td>\n",
              "      <td>너랑 나</td>\n",
              "      <td>아이유</td>\n",
              "      <td>시곌 보며 속삭이는 비밀들 간절한 내 맘속 이야기 지금 내 모습을 해쳐도 좋아 나를...</td>\n",
              "      <td>2011</td>\n",
              "      <td>155,098</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a89d1472-1c0c-4544-81db-ed47716f7c6c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a89d1472-1c0c-4544-81db-ed47716f7c6c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a89d1472-1c0c-4544-81db-ed47716f7c6c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9d3b41d5-f785-442a-9f11-6c5c54d5c085\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9d3b41d5-f785-442a-9f11-6c5c54d5c085')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9d3b41d5-f785-442a-9f11-6c5c54d5c085 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "genre",
              "summary": "{\n  \"name\": \"genre\",\n  \"rows\": 2826,\n  \"fields\": [\n    {\n      \"column\": \"\\uc7a5\\ub974\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"\\ud2b8\\ub85c\\ud2b8\",\n          \"\\ub304\\uc2a4\",\n          \"\\ud3ec\\ud06c/\\ube14\\ub8e8\\uc2a4/\\ucee8\\ud2b8\\ub9ac\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc81c\\ubaa9\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2592,\n        \"samples\": [\n          \"Two Birds\",\n          \"Here It Is (Feat. Chris Brown)\",\n          \"\\uc6b0\\uc6b8\\uc2dc\\uacc4 (Feat. \\uc885\\ud604 Of SHINee)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac00\\uc218\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 992,\n        \"samples\": [\n          \"\\ud314\\ub85c\\uc54c\\ud1a0 (Paloalto)\",\n          \"\\ubabd\\ub2c8\",\n          \"\\uc18c\\ub780 (SORAN), Sam Ock, \\uaf43\\uc7a0\\ud504\\ub85c\\uc81d\\ud2b8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac00\\uc0ac\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2705,\n        \"samples\": [\n          \"\\uc624\\ub298\\uc740 \\ubb34\\uc2a8\\uc77c \\uc778\\uac70\\ub2c8 \\uc6b8\\uc5c8\\ub358 \\uc5bc\\uad74 \\uac19\\uc740\\uac78 \\uadf8\\uac00 \\ub108\\uc758 \\ub9c8\\uc74c\\uc744 \\uc544\\ud504\\uac8c \\ud588\\ub2c8 \\ub098\\uc5d0\\uac90 \\uc138\\uc0c1 \\uc824 \\uc18c\\uc911\\ud55c \\ub108\\uc778\\ub370 \\uc790\\ud310\\uae30 \\ucee4\\ud53c\\ub97c \\ub0b4\\ubc00\\uc5b4 \\uadf8 \\uc18d\\uc5d0 \\uac10\\ucdb0\\uc628 \\ub0b4 \\ub9d8\\uc744 \\ub2f4\\uc544 \\uace0\\ub9c8\\uc6cc \\uc624\\ube64 \\ub108\\ubb34 \\uc88b\\uc740 \\uc0ac\\ub78c\\uc774\\uc57c \\uadf8 \\ud55c\\ub9c8\\ub514\\uc5d0 \\ub09c \\uc6c3\\uc744\\ubfd0 \\ud639\\uc2dc \\ub10c \\uae30\\uc5b5\\ud558\\uace0 \\uc788\\uc744\\uae4c \\ub0b4 \\uce5c\\uad6c \\ud559\\uad50 \\uc55e\\uc5d0 \\ub180\\ub7ec\\uc654\\ub358 \\ub0a0 \\uc6b0\\ub9ac\\ub4e4 \\uc5f0\\uc778\\uac19\\ub2e4 \\uc7a5\\ub09c\\ucce4\\uc744 \\ub54c \\ub10c \\uc6c3\\uc5c8\\uace0 \\ub09c \\ubc24 \\uc9c0\\uc0c8\\uc6e0\\uc9c0 \\ub124\\uac00 \\uc6c3\\uc73c\\uba74 \\ub098\\ub3c4 \\uc88b\\uc544 \\ub10c \\uc7a5\\ub09c\\uc774\\ub77c \\ud574\\ub3c4 \\ub110 \\uae30\\ub2e4\\ub838\\ub358 \\ub0a0 \\ub110 \\ubcf4\\uace0 \\uc2f6\\ub358 \\ubc24 \\ub0b4\\uac90 \\ubc85\\ucc2c \\ud589\\ubcf5 \\uac00\\ub4dd\\ud55c\\ub370 \\ub098\\ub294 \\ud63c\\uc790\\uc5ec\\ub3c4 \\uad1c\\ucc2e\\uc544 \\ub110 \\ubcfc \\uc218\\ub9cc \\uc788\\ub2e4\\uba74 \\ub298 \\ub108\\uc758 \\ub4a4\\uc5d0\\uc11c \\ub298 \\ub110 \\ubc14\\ub77c\\ubcf4\\ub294 \\uadf8\\uac8c \\ub0b4\\uac00 \\uac00\\uc9c4 \\ubaab\\uc778\\uac83\\ub9cc \\uac19\\uc544 \\uce5c\\uad6c\\ub4e4 \\uc9c0\\uacb9\\ub2e4 \\ub9d0\\ud558\\uc9c0 \\ub298 \\uac19\\uc740 \\ub178\\ub7a0 \\ubd80\\ub974\\ub294 \\ub098\\uc5d0\\uac8c \\ud558\\uc9c0\\ub9cc \\uadf8\\uac8c \\ubc14\\ub85c \\ub0b4 \\ub9c8\\uc74c\\uc778\\uac78 \\uadf8\\ub300 \\uba3c\\uacf3\\ub9cc \\ubcf4\\ub124\\uc694 \\ud639\\uc2dc \\ub10c \\uadf8\\ub0a0 \\ub0b4 \\ub9d8\\uc744 \\uc54c\\uae4c \\uc6b0\\ub9ac\\ub4e4 \\uc544\\ub294 \\uce5c\\uad6c \\ubaa8\\ub450 \\ubaa8\\uc778 \\ubc24 \\uc220\\ucde8\\ud55c \\ub110 \\ub370\\ub9ac\\ub7ec \\uc628 \\uadf8\\ub97c \\ub0b4\\uac8c \\uc778\\uc0ac\\uc2dc\\ucf30\\ub358 \\ub098\\uc758 \\uc0dd\\uc77c \\ub0a0 \\ub124\\uac00 \\uc88b\\uc73c\\uba74 \\ub098\\ub3c4 \\uc88b\\uc544 \\ub124 \\uc606\\uc5d0 \\uadf8\\ub97c \\ubcf4\\uba70 \\ub098\\uc644 \\ub108\\ubb34 \\ub2e4\\ub978 \\ub09c \\ucd08\\ub77c\\ud574\\uc9c0\\ub294 \\uadf8\\uc5d0\\uac8c \\ub110 \\ubd80\\ud0c1\\ud55c\\ub2e4\\ub294 \\ub9d0 \\ubc16\\uc5d0 \\ub110 \\uc6b8\\ub9ac\\ub294 \\uc0ac\\ub78c\\uacfc \\uc704\\ub85c \\ubc16\\uc5d0 \\ubabb\\ud558\\ub294 \\ub098 \\ub124\\uac00 \\uc6c3\\uc73c\\uba74 \\ub098\\ub3c4 \\uc88b\\uc544 \\ub10c \\uc7a5\\ub09c\\uc774\\ub77c \\ud574\\ub3c4 \\ub110 \\uae30\\ub2e4\\ub838\\ub358 \\ub0a0 \\ub110 \\ubcf4\\uace0 \\uc2f6\\ub358 \\ubc24 \\ub0b4\\uac90 \\ubc85\\ucc2c \\ud589\\ubcf5 \\uac00\\ub4dd\\ud55c\\ub370 \\ub098\\ub294 \\ud63c\\uc790\\uc5ec\\ub3c4 \\uad1c\\ucc2e\\uc544 \\ub110 \\ubcfc\\uc218\\ub9cc \\uc788\\ub2e4\\uba74 \\ub098 \\ub298 \\ub108\\uc758 \\ub4a4\\uc5d0\\uc11c \\ub298 \\ub110 \\ubc14\\ub77c\\ubcf4\\ub294 \\uadf8\\uac8c \\ub0b4\\uac00 \\uac00\\uc9c4 \\ubaab\\uc778\\uac83\\ub9cc \\uac19\\uc544\",\n          \"\\uc624 \\ub0b4\\uac00 \\uc6c3\\uace0 \\uc788\\ub098\\uc694 think it's funny \\ubaa8\\ub450 \\uac70\\uc9d3\\uc774\\uaca0\\uc8e0 think it's funny \\ub0a0 \\ubcf4\\ub294 \\uc774\\ub4e4\\uc758 \\ub208\\ube5b \\uc18d\\uc5d0\\ub294 oh \\uc2ac\\ud514\\uc774 \\uc816\\uc5b4\\uc788\\ub294\\ub370 don't you worry \\ud5e4\\uc774 \\ub0b4 \\uc774\\ub984\\uc740 \\uad11\\ub300 \\ub0b4 \\uc9c1\\uc5c5\\uc740 \\uc218\\ub9ce\\uc740\\uad00\\uac1d \\uadf8 \\uc55e\\uc5d0 \\uc6c3\\uc74c\\uc744 \\ud30c\\ub294 \\uc77c \\uc2ac\\ud37c\\ub3c4 \\uc6c3\\uc73c\\uba70 \\ub0b4 \\ubaa8\\uc2b5\\uc744 \\uac10\\ucd94\\ub294\\uac8c \\ucca0\\uce59 \\uc624 \\uc774\\ub7f0 \\ub0b4 \\ucc98\\uc9c8 \\uc190\\uac00\\ub77d\\uc9c8 \\ud558\\uba70 \\ub0a0 \\ubaa8\\uc695\\ud574\\ub3c4 \\ub354 \\ud06c\\uac8c \\uc6c3\\uace0 \\ub09c \\ub540\\uc73c\\ub85c \\ubaa9\\uc695\\ud558\\uace0 \\uc74c\\uc545\\uc774 \\uaebc\\uc9c0\\uace0 \\ub9c9\\uc774 \\ub0b4\\ub9ac\\uace0 \\ubc24\\uc774 \\uc624\\uba74 \\ubcc4\\ube5b\\uc5d0 \\ubab8\\uc744 \\uc53b\\uace0 \\ub208\\ubd80\\uc2dc\\uac8c \\uad11\\ub0b8 \\uad6c\\ub450\\ub97c \\uc2e0\\uace0 \\ub2ec\\uc5d0\\uac8c \\uccad\\ud63c\\ud558\\ub4ef \\uc190\\uc744 \\ub0b4\\ubc00\\uc5b4 \\uc5bc\\uc74c \\uc704\\ub97c \\ubbf8\\ub044\\ub7ec\\uc9c0\\ub4ef \\uc55e\\uc73c\\ub85c \\ub2ec\\ub824 \\uc544\\ubb34\\ub3c4 \\uc544\\ubb34\\ub3c4 \\ubaa8\\ub974\\uac8c \\uc870\\uc6a9\\ud788 \\ud750\\ub974\\ub294 \\uc774 \\uc2dc\\uac04\\uc5d0 \\uc678\\ub86d\\uac8c\\ud640\\ub85c \\ud540 \\uaf43 \\ud55c \\uc1a1\\uc774\\uc5d0 \\ub09c \\ubc18\\ud574 \\uc0ac\\ub791\\uc744 \\ub098\\ub204\\ub824 \\ub098\\ub294 \\uac04\\ub2e4\\ub124 \\uc138\\uc0c1\\uc744 \\ub118\\uc5b4 \\uc2dc\\uac04\\uc744 \\uba48\\ucd94\\uace0 \\uc138\\uc0c1\\uc744 \\ub118\\uc5b4 \\uc2e0\\ub098\\uac8c \\ucda4\\uc744 \\ucdb0\\ubd10 \\uc138\\uc0c1\\uc744 \\ub118\\uc5b4 \\ubaa8\\ub450\\uac00 \\uac19\\uc740 \\ub192\\uc774\\uc5d0\\uc11c \\uadf8\\ub798 \\uadf8\\ub798 \\uadf8\\ub807\\uac8c \\uc624 \\ub0b4\\uac00 \\uc6c3\\uace0 \\uc788\\ub098\\uc694 think it's funny \\ubaa8\\ub450 \\uac70\\uc9d3\\uc774\\uaca0\\uc8e0 think it's funny \\ub0a0 \\ubcf4\\ub294 \\uc774\\ub4e4\\uc758 \\ub208\\ube5b \\uc18d\\uc5d0\\ub294 oh \\uc2ac\\ud514\\uc774 \\uc816\\uc5b4\\uc788\\ub294\\ub370 don't you worry \\ud5e4\\uc774 \\ubb34\\ub300 \\uc704\\uc5d0 \\uc11c\\uba74 \\uc6b0\\ub9b0 \\ub54c\\ub860 \\uc815\\ubc18\\ub300 \\ub0b4\\uac00 \\uad00\\uac1d\\uc774 \\ub3fc \\uc0ac\\ub78c\\ub4e4\\uc758 \\uc5bc\\uad74\\uc5d0 \\uc0c1\\uc0c1\\uc758 \\uadf8\\ub9bc\\uc744 \\uadf8\\ub824 \\ubb3c\\uac10\\uc744 \\ubfcc\\ub824 \\uc800 \\ubd88\\ud0c0\\ub294 \\uc774\\uc2ed\\ub300\\uc758 \\uccad\\ucd98\\uc740 \\ub0b4\\uc77c\\uc774\\uba74 \\uc774 \\uc0ac\\ud68c\\uc758 \\uccab \\uc904\\uc744 \\uc774\\ub825\\uc11c \\uc4f0\\uba70 \\uc778\\uc0dd\\uc744 \\uc2dc\\ud5d8\\ubcf4\\uace0 \\uc800 \\uc21c\\uc9c4\\ud55c \\uc0ac\\ub791\\uc758 \\ucd08\\ubcf4 \\uc560\\uc778\\uc788\\ub294 \\ub0a8\\uc790\\uc640 \\ub208 \\ub9de\\uc5b4 \\uc0ac\\ub791\\uc5d0 \\ube60\\uc838 \\uc2ac\\ud514\\uc744 \\uae30\\ub2e4\\ub9ac\\ub124 come on baby \\ub108\\uc640 \\ub098 \\ubaa8\\ub450 \\uc655\\uc758 \\uc637\\uc744 \\uc785\\uc5b4\\ub3c4 \\uc2e0\\ud558\\uac00 \\ub418\\ubc84\\ub9ac\\ub294 \\ud604\\uc2e4\\uc5d0 \\ud63c\\uc2e0\\uc5d0 \\ud798\\uc744 \\ub2e4\\ud574 \\ud5cc\\uc2e0\\uc5d0 \\uc624\\ub298 \\uc220 \\ud55c\\uc794\\ud558\\uba74 \\ub0b4\\uc77c\\uc740 \\ubb3c \\ud55c\\uc794\\uc73c\\ub85c \\ubc84\\ud168\\uc57c\\ud558\\uc9c0\\ub9cc \\uc77c\\ub2e8\\uc740 \\uc624\\ub298 \\ub610 \\ub9c8\\uc2dc\\ub124 \\uc544\\ud514\\uc774 \\uc2f9 \\uac00\\uc2dc\\ub124 \\uc138\\uc0c1\\uc744 \\ub118\\uc5b4 \\uc2dc\\uac04\\uc744 \\uba48\\ucd94\\uace0 \\uc138\\uc0c1\\uc744 \\ub118\\uc5b4 \\uc2e0\\ub098\\uac8c \\ucda4\\uc744 \\ucdb0\\ubd10 \\uc138\\uc0c1\\uc744 \\ub118\\uc5b4 \\ubaa8\\ub450\\uac00 \\uac19\\uc740 \\ub192\\uc774\\uc5d0\\uc11c \\uadf8\\ub798 \\uadf8\\ub798 \\uadf8\\ub807\\uac8c \\uc608 \\uc624 \\ub0b4\\uac00 \\uc6c3\\uace0 \\uc788\\ub098\\uc694 Think It's smile \\ubaa8\\ub450 \\uac70\\uc9d3\\uc774\\uaca0\\uc8e0 Think It's smile \\ub0a0 \\ubcf4\\ub294 \\uc774\\ub4e4\\uc758 \\ub208\\ube5b \\uc18d\\uc5d0\\ub294 Oh \\uc2ac\\ud514\\uc774 \\uc816\\uc5b4 \\uc788\\ub294\\ub370 Don\\u2032t you worry \\uc624 \\ub0b4\\uac00 \\uc6c3\\uace0 \\uc788\\ub098\\uc694 Think It's smile \\ubaa8\\ub450 \\uac70\\uc9d3\\uc774\\uaca0\\uc8e0 Think It's smile \\ub0a0 \\ubcf4\\ub294 \\uc774\\ub4e4\\uc758 \\ub208\\ube5b \\uc18d\\uc5d0\\ub294 Oh \\uc2ac\\ud514\\uc774 \\uc816\\uc5b4 \\uc788\\ub294\\ub370 Don\\u2032t you worry Hey\",\n          \"\\ud658\\uc0c1\\uc18d\\uc5d0 \\uc788\\uc5b4 \\ub2e4\\uac00 \\uc124 \\uc218 \\uc5c6\\ub294 \\ub098\\uc5d0\\uac8c \\ub108\\ub97c \\ubcf4\\uc5ec\\uc918 \\uc870\\uae08\\ub9cc \\ub2e4\\uac00\\uc11c\\ub3c4 \\uba40\\uc5b4\\uc9c0\\ub294 \\ub098\\uc758 \\uc0ac\\ub791 \\ub098\\uc758 \\uafc8  \\ub124\\uac8c \\ub098\\ub97c \\ub9de\\ucdb0\\uac00\\uace0 \\uc788\\ub2e4 \\ub9d0 \\ud558\\uc9c0\\ub9c8 \\ub098\\uc5d0\\uac8c \\ub108\\ub97c \\ucd08\\ub300 \\ud560 \\ubfd0\\uc774\\uc57c \\uc2e0\\ube44\\ub85c\\uc6b4 \\ub108\\uc758 \\ubaa8\\uc2b5 \\ub098\\uc5d0\\uac8c\\ub294 \\uc0ac\\ub791\\uc778\\uac78 \\uc870\\uae08\\uc529 \\ub2e4\\uac00\\uc624\\ub294 \\ub110 \\ub290\\ub084\\uc218\\ub85d \\uc2e0\\ube44\\ub85c\\uc6b4 \\ub108\\uc758 \\ubaa8\\uc2b5 \\ub098\\uc5d0\\uac8c\\ub294\\uc0ac\\ub791\\uc778\\uac78 \\uc870\\uae08\\uc529 \\uba48\\ucdb0\\uc9c0\\ub294 \\uc2dc\\uac04\\uc18d\\uc5d0 \\ub110 \\uc5b4\\ub460\\uc18d\\uc758 \\ube5b\\ucc98\\ub7fc  my love \\ub2e4\\uac00\\uc124 \\uc218 \\uc5c6\\ub294 \\ub108\\ub97c \\ub0b4\\uac8c \\ubcf4\\uc5ec\\uc918 \\uc5b4\\ub460\\uc18d\\uc758 \\ud55c \\uc904\\uae30 \\ube5b\\ucc98\\ub7fc \\ub290\\uaef4 my love \\uc0ac\\ub791\\ud558\\ub294 \\ub108\\ub97c \\ubaa8\\ub450 \\ub290\\ub084 \\uc218 \\uc788\\uc5b4 \\uc5b4\\ub460\\uc18d\\uc758 \\ube5b\\ucc98\\ub7fc   \\ub124\\uac8c \\ub098\\ub97c \\ub9de\\ucdb0\\uac00\\uace0 \\uc788\\ub2e4 \\ub9d0 \\ud558\\uc9c0\\ub9c8 \\ub098\\uc5d0\\uac8c \\ub108\\ub97c \\ucd08\\ub300 \\ud560 \\ubfd0\\uc774\\uc57c \\uc2e0\\ube44\\ub85c\\uc6b4 \\ub108\\uc758 \\ubaa8\\uc2b5 \\ub098\\uc5d0\\uac8c\\ub294 \\uc0ac\\ub791\\uc778\\uac78 \\uc870\\uae08\\uc529 \\ub2e4\\uac00\\uc624\\ub294 \\ub110 \\ub290\\ub084\\uc218\\ub85d \\uc2e0\\ube44\\ub85c\\uc6b4 \\ub108\\uc758 \\ubaa8\\uc2b5 \\ub098\\uc5d0\\uac8c\\ub294 \\uc0ac\\ub791\\uc778\\uac78 \\uc870\\uae08\\uc529 \\uba48\\ucdb0\\uc9c0\\ub294 \\uc2dc\\uac04\\uc18d\\uc5d0 \\ub110  \\uc5b4\\ub460\\uc18d\\uc758 \\ube5b\\ucc98\\ub7fc my love \\ub2e4\\uac00\\uc124 \\uc218 \\uc5c6\\ub294 \\ub108\\ub97c \\ub0b4\\uac8c \\ubcf4\\uc5ec\\uc918 \\uc5b4\\ub460\\uc18d\\uc758 \\ud55c\\uc904\\uae30 \\ube5b\\ucc98\\ub7fc \\ub290\\uaef4 my love \\ub108\\ub97c \\uae30\\ub2e4\\ub9ac\\ub294 \\ub098\\uc758 \\uc544\\ub984\\ub2e4\\uc6e0\\ub358 \\uc2dc\\uac04\\uc18d\\uc5d0 \\ub110 \\uadf8\\ub9ac\\uc6cc my love  \\uc0ac\\ub791\\ud558\\uace0\\uc2f6\\uc740 \\ub108\\ub97c \\ub0b4\\uac8c\\ubcf4\\uc5ec\\uc918 \\uc5b4\\ub460\\uc18d\\uc758 \\ud55c\\uc904\\uae30 \\ube5b\\ucc98\\ub7fc\\ub290\\uaef4 my love \\uc0ac\\ub791\\ud558\\ub294 \\ub108\\ub97c \\ubaa8\\ub450 \\ub290\\ub084 \\uc218 \\uc788\\uc5b4 \\uc2ac\\ud508 \\ub108\\uc758 \\uc0ac\\ub791\\uc744 -\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubc1c\\ub9e4\\ub144\\ub3c4\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1340,\n        \"samples\": [\n          \"1998.05.21\",\n          \"2011.09.19\",\n          \"2004.11.13\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc88b\\uc544\\uc694 \\uc218\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2691,\n        \"samples\": [\n          \"5,997\",\n          \"7,985\",\n          \"64,368\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "playlist = pd.read_pickle('/content/drive/MyDrive/2. KOREA UNIV./KUBIG/2024 Fall/추천시스템/Week 6 - 데이터 완성/playlist.pickle')\n",
        "playlist['가사'] = playlist['가사'].str.replace('\\n',' ')\n",
        "playlist.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "TbO3OYwumndo",
        "outputId": "4e467d39-5c89-492a-b63b-5730bf9bc291"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         플리                            제목                 가수  \\\n",
              "0  melody_1  you should see me in a crown      Billie Eilish   \n",
              "1  melody_1                     Dead Meat        Sean Lennon   \n",
              "2  melody_1      Look What You Made Me Do       Taylor Swift   \n",
              "3  melody_1                           MAD     Caravan Palace   \n",
              "4  melody_1                        Killer  Valerie Broussard   \n",
              "\n",
              "                                                  가사   장르   발매일     좋아요  \n",
              "0  Bite my tongue bide my time Wearing a warning ...  POP  2018  28,392  \n",
              "1  Dead meatdon't you know you're dead meatyou ju...  POP  2006     324  \n",
              "2  I don't like your little games Don't like your...  POP  2017  65,931  \n",
              "3  I turn on the engine, better be on clock I bum...  POP  2023      77  \n",
              "4  Standing on the highway with my thumb out Ever...  POP  2019  16,078  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-61a89646-d166-4ca8-8b6f-c6ed58fa91fa\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>플리</th>\n",
              "      <th>제목</th>\n",
              "      <th>가수</th>\n",
              "      <th>가사</th>\n",
              "      <th>장르</th>\n",
              "      <th>발매일</th>\n",
              "      <th>좋아요</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>melody_1</td>\n",
              "      <td>you should see me in a crown</td>\n",
              "      <td>Billie Eilish</td>\n",
              "      <td>Bite my tongue bide my time Wearing a warning ...</td>\n",
              "      <td>POP</td>\n",
              "      <td>2018</td>\n",
              "      <td>28,392</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>melody_1</td>\n",
              "      <td>Dead Meat</td>\n",
              "      <td>Sean Lennon</td>\n",
              "      <td>Dead meatdon't you know you're dead meatyou ju...</td>\n",
              "      <td>POP</td>\n",
              "      <td>2006</td>\n",
              "      <td>324</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>melody_1</td>\n",
              "      <td>Look What You Made Me Do</td>\n",
              "      <td>Taylor Swift</td>\n",
              "      <td>I don't like your little games Don't like your...</td>\n",
              "      <td>POP</td>\n",
              "      <td>2017</td>\n",
              "      <td>65,931</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>melody_1</td>\n",
              "      <td>MAD</td>\n",
              "      <td>Caravan Palace</td>\n",
              "      <td>I turn on the engine, better be on clock I bum...</td>\n",
              "      <td>POP</td>\n",
              "      <td>2023</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>melody_1</td>\n",
              "      <td>Killer</td>\n",
              "      <td>Valerie Broussard</td>\n",
              "      <td>Standing on the highway with my thumb out Ever...</td>\n",
              "      <td>POP</td>\n",
              "      <td>2019</td>\n",
              "      <td>16,078</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61a89646-d166-4ca8-8b6f-c6ed58fa91fa')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-61a89646-d166-4ca8-8b6f-c6ed58fa91fa button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-61a89646-d166-4ca8-8b6f-c6ed58fa91fa');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-19b8a92b-ba8b-4ed7-bb21-d63e5e404372\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-19b8a92b-ba8b-4ed7-bb21-d63e5e404372')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-19b8a92b-ba8b-4ed7-bb21-d63e5e404372 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "playlist",
              "summary": "{\n  \"name\": \"playlist\",\n  \"rows\": 32600,\n  \"fields\": [\n    {\n      \"column\": \"\\ud50c\\ub9ac\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1007,\n        \"samples\": [\n          \"obey_9\",\n          \"output_17\",\n          \"lovely_11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc81c\\ubaa9\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 17341,\n        \"samples\": [\n          \"\\ub0b4\\uac00 \\ud558\\ub298\\uc744 \\ub0a0 \\uc218 \\uc788\\uc744\\uae4c?\",\n          \"\\uc9d0\\uc0b4\\ub77c\\ube54 (Zimzalabim)\",\n          \"We Stay\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac00\\uc218\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6964,\n        \"samples\": [\n          \"\\uc774\\ud601\",\n          \"Jayci yucca (\\uc81c\\uc774\\uc528 \\uc720\\uce74)\",\n          \"Grian Chatten\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac00\\uc0ac\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19490,\n        \"samples\": [\n          \"Kiss Kiss Kiss me darling kiss me Kiss me tonight kiss me darling kiss And you'll be alright kiss me darling kiss Your kiss is so wonderful My love you'll always be My love you'll always stay by my side Stay for a while stay here you Beautiful girl stay in my arms And I'll sing you a song Let me protect you tonight 'cause I will give you love my love like No one's done before hug you and Holding you tight so kiss me darling Kiss me kiss me tonight Kiss me darling kiss and you'll be alright Kiss me darling kiss your kiss is So wonderful my love you'll always be My love you'll always be The world outside is Moving in such a hurry Don't you let it's madness Blow you down come let's throw Some light on all this sadness Come let's make love my dear  Stay by my side stay for a while Stay here you Beautiful girl Stay in my arms and I'll sing you a song Let me protect you tonight 'cause I will give you love my love like No one's done before hug you and Holding you tight kiss me darling Kiss me kiss me tonight Kiss me darling kiss and you'll be alright Kiss me darling kiss your kiss is So wonderful my love you'll always be So kiss me darling kiss kiss me tonight So kiss me darling kiss and You'll be alright kiss me darling kiss Your kiss is so wonderful my love You'll always be my love\",\n          \"Don't think that I'd Ever be the right one For you But ever since that Beautiful night I wanted more Even though I don't know a thing about true love Or to keep my heart in place for that someone When I'm with you I don't feel like I have to run It's like coming home All the highs and lows They settle down like dust falls on the ground Baby you should know This before you go Promise that I'll make you feel the same Somehow Promise that I Promise that I Hope that you'll find All of the times we'd spent, well Must say that I'll Never forget For the rest of my life Even though I don't know a thing about true love Or to keep my heart in place for that someone When I'm with you I don't feel like I have to run It's like coming home All the highs and lows They settle down like dust falls on the ground Baby you should know This before you go Promise that I'll make you feel the same Somehow Promise that I Promise that I'll make you feel the same Somehow\",\n          \"\\ud130\\ubc85 \\ud130\\ubc85 \\uc9d1\\uc73c\\ub85c \\ub3cc\\uc544\\uac00\\ub294 \\uae38\\uc5d4 \\uac78\\uc74c \\ub9cc\\ud07c \\ub364\\ub364\\ud55c \\ucc99\\uc774 \\ub294 \\uac83 \\uac19\\uc544 \\ub0b4 \\ud558\\ub8e8\\uc5d0 \\uc9c4\\uc9dc \\ub098\\ub294 \\uba87 \\ud37c\\uc13c\\ud2b8\\ub098 \\ub420\\uae4c \\uc624\\ub298\\uacfc \\ub0b4\\uc77c \\uc0ac\\uc774 \\ud2c8\\uc0ac\\uc774\\uc5d0 \\ub07c\\uc5ec \\uc9d1\\uc73c\\ub85c hmm \\uc774\\ub798\\ub3c4 \\ub418\\ub294\\uc9c0 \\uc548\\ub418\\ub294\\uc9c0 \\ubaa8\\ub974\\uaca0\\uc5b4 \\uc624\\ub298\\ub3c4 \\ub354\\ub4ec\\ub354\\ub4ec \\ud5e4\\ub9e4\\uc774\\ub2e4\\uac00 \\ub3cb\\uce5c \\uac00\\uc2dc\\uac00 \\ub108\\ubb34 \\ub9ce\\uc740 \\uc774 \\ub3c4\\uc2dc\\uc5d0 \\ub09c \\ucc14\\ub824 \\uc870\\uae08 \\uc544\\ud320\\uc5b4 \\uc790\\uace0 \\ub098\\uba74 \\uc791\\uc544\\uc838\\ub9cc\\uac00\\ub294 \\uc624\\ub798\\ub41c \\ub0b4 \\uafc8\\uc5d0 \\ubd80\\ub044\\ub7ec\\uc6b4\\uac8c \\uc2eb\\uc5b4 \\uc624\\ub298\\ub3c4 \\uafb9 \\ucc38\\uace0 \\uc788\\uc9c0\\ub9cc umm \\uc774\\ub798\\ub3c4 \\ub418\\ub294\\uc9c0 \\uc548\\ub418\\ub294\\uc9c0 \\ubaa8\\ub974\\uaca0\\uc5b4 \\uc624\\ub298\\ub3c4 \\ub354\\ub4ec\\ub354\\ub4ec \\ud5e4\\ub9e4\\uc774\\ub2e4\\uac00 \\ub3cb\\uce5c \\uac00\\uc2dc\\uac00 \\ub9ce\\uc740 \\uc774 \\ub3c4\\uc2dc\\uc5d0 \\ub09c \\ucc14\\ub824 \\uc870\\uae08 \\uc544\\ud320\\uc5b4 \\ub0b4 \\uc0b6\\uc5d0\\ub3c4 10\\ucd08\\uc529 \\uac74\\ub108\\ub6f0\\ub294 \\ubc84\\ud2bc\\uc774 \\uc788\\uc73c\\uba74 \\uc88b\\uaca0\\uc5b4 \\ud574\\uc18c \\uc5c6\\ub294 \\uac08\\ub4f1\\uc744 \\uac10\\ub2f9\\ud558\\uae30\\uc5d4 \\uc544\\uc9c1 \\ub09c \\uc5b4\\ub9b0\\uac00\\ubd10 \\ubd88\\uc548\\ubd88\\uc548 \\uc678\\uc904\\uc744 \\ud0c0\\ub294 \\uae30\\ubd84 \\ub5a8\\uc5b4\\uc9c0\\uba74 \\uc660\\uc9c0 \\uc548\\ub420\\uac83 \\uac19\\uace0 \\uad1c\\ud55c \\uc695\\uc2ec\\uc5d0 \\ubd88\\uc465 \\uac70\\uc9d3\\ub9d0\\uc774 \\ub298\\uc5b4\\ub09c \\uba3c\\uc9c0 \\ub9ce\\uc740 \\ud558\\ub8e8 \\ub3cb\\uce5c \\uac00\\uc2dc\\uac00 \\ub108\\ubb34 \\ub9ce\\uc740 \\uc774 \\ub3c4\\uc2dc\\uc5d0 \\ub09c \\ucc14\\ub824 \\uc870\\uae08 \\uc544\\ud320\\uc5b4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc7a5\\ub974\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 88,\n        \"samples\": [\n          \"\\uad6d\\ub0b4\\ubba4\\uc9c0\\uceec\",\n          \"POP\",\n          \"\\uc77c\\ub809\\ud2b8\\ub85c\\ub2c8\\uce74\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubc1c\\ub9e4\\uc77c\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 59,\n        \"samples\": [\n          \"2018\",\n          \"2020\",\n          \"1966\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc88b\\uc544\\uc694\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20145,\n        \"samples\": [\n          \"298,528\",\n          \"30,874\",\n          \"1,856\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"chart :\", chart.shape[0], \"\\ngenre :\", genre.shape[0], \"\\nplaylist :\", playlist.shape[0])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cBk-i3TQmrGV",
        "outputId": "d6a613ef-1ba8-454c-eaa8-78784f36bf10"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "chart : 6414 \n",
            "genre : 2826 \n",
            "playlist : 32600\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Upstage"
      ],
      "metadata": {
        "id": "7VTzdRdGlJ48"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "! pip install -qU langchain langchain-upstage langchain_community python-dotenv"
      ],
      "metadata": {
        "id": "rlERWb4FlK7l",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e126403b-94fe-48be-e10b-ba94609ff9c8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/1.0 MB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[90m╺\u001b[0m\u001b[90m━━━━━━━━━━━\u001b[0m \u001b[32m0.7/1.0 MB\u001b[0m \u001b[31m21.7 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m17.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.5/2.5 MB\u001b[0m \u001b[31m53.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m411.6/411.6 kB\u001b[0m \u001b[31m11.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.9/50.9 kB\u001b[0m \u001b[31m2.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m295.8/295.8 kB\u001b[0m \u001b[31m11.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.6/3.6 MB\u001b[0m \u001b[31m43.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m49.3/49.3 kB\u001b[0m \u001b[31m3.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m454.3/454.3 kB\u001b[0m \u001b[31m13.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m44.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "transformers 4.47.1 requires tokenizers<0.22,>=0.21, but you have tokenizers 0.19.1 which is incompatible.\u001b[0m\u001b[31m\n",
            "\u001b[0m"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# # @title set API key\n",
        "# import os\n",
        "# import getpass\n",
        "\n",
        "# from pprint import pprint\n",
        "\n",
        "# import warnings\n",
        "\n",
        "# warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "# if \"google.colab\" in str(get_ipython()):\n",
        "#     # Running in Google Colab. Please set the UPSTAGE_API_KEY in the Colab Secrets\n",
        "#     from google.colab import userdata\n",
        "\n",
        "#     os.environ[\"UPSTAGE_API_KEY\"] = userdata.get(\"UPSTAGE_API_KEY\")\n",
        "# else:\n",
        "#     # Running locally. Please set the UPSTAGE_API_KEY in the .env file\n",
        "#     from dotenv import load_dotenv\n",
        "\n",
        "#     load_dotenv()\n",
        "\n",
        "# if \"UPSTAGE_API_KEY\" not in os.environ:\n",
        "#     os.environ[\"UPSTAGE_API_KEY\"] = getpass.getpass(\"Enter your Upstage API key: \")"
      ],
      "metadata": {
        "id": "4V1TNZ1UlIuE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "form_fields = [\n",
        "    {\n",
        "        \"1\": [\"keyword1\", \"keyword2\", \"keyword3\"],\n",
        "        # \"Description\": \"Find three Korean noun keywords that can summarize the lyrics, in Korean.\"\n",
        "        \"2\": [\"emotion1\", \"emotion2\", \"emotion3\"]\n",
        "        # \"Description\": \"Provide three noun emotions that can describe the lyrics, in Korean (e.g., 행복, 슬픔, 우울, 설렘, )\"\n",
        "    }\n",
        "]"
      ],
      "metadata": {
        "id": "cPF3nW57lPyu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "my_info = chart['가사'][157]"
      ],
      "metadata": {
        "id": "BRtBBtqFlXea"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from langchain_core.prompts import ChatPromptTemplate\n",
        "from langchain_core.output_parsers import StrOutputParser\n",
        "from langchain_upstage import ChatUpstage\n",
        "\n",
        "form_filling_prompt_teample = ChatPromptTemplate.from_messages(\n",
        "    [\n",
        "        (\n",
        "            \"human\",\n",
        "            \"\"\"You are a form filler. Fill out the form based on the lyrics below.\n",
        "\n",
        "            **Instructions:**\n",
        "            - Extract **three keywords** and **three emotions** from the given lyrics.\n",
        "            - Find three Korean noun keywords that can summarize the lyrics, in Korean.\n",
        "            - Provide three noun emotions that can describe the lyrics, in Korean (e.g. 행복, 슬픔, 우울, 설렘)\n",
        "            - Make sure the answers are in **Korean**. If some words are english or numbers, **translate them into Korean.**\n",
        "            - Make sure the answers are all **nouns**.\n",
        "            - Provide the output in the following **format**, **without any additional discription**:\n",
        "            - **Make sure you follow the given format**\n",
        "              {{\n",
        "                \"1\" : [\"keyword1\", \"keyword2\", \"keyword3\"],\n",
        "                \"2\" : [\"emotion1\", \"emotion2\", \"emotion3\"]\n",
        "              }}\n",
        "            - Do your best to extract the information.\n",
        "            - If you can guess from the lyrics, fill it out and make \"[GUESS]\".\n",
        "            - If unsure, fill the missing part with \"모르겠습니다.\"\n",
        "\n",
        "            **Lyrics:**\n",
        "            {my_info}\n",
        "\n",
        "            **Form to Fill:**\n",
        "            {form_fields}\n",
        "\n",
        "            **Expected Output Example:**\n",
        "            {{\n",
        "              \"1\" : [\"하늘\", \"고백\", \"사랑\"],\n",
        "              \"2\" : [\"설렘\", \"행복\", \"포근함\"]\n",
        "            }}\n",
        "            \"\"\",\n",
        "        )\n",
        "    ]\n",
        ")"
      ],
      "metadata": {
        "id": "BZR1enQXlWh6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# write prompt\n",
        "prompt = form_filling_prompt_teample.format_messages(\n",
        "    my_info=my_info,\n",
        "    form_fields=form_fields,\n",
        ")\n",
        "\n",
        "# print(prompt[0].content)"
      ],
      "metadata": {
        "id": "IVA18Fn8lim2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "solar_mini = ChatUpstage(model=\"solar-1-mini-chat\")\n",
        "chain_mini = form_filling_prompt_teample | solar_mini | StrOutputParser()"
      ],
      "metadata": {
        "id": "-7yCUSNUlrg5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "filled_form = chain_mini.invoke(\n",
        "    {\n",
        "        \"my_info\": my_info,\n",
        "        \"form_fields\": form_fields,\n",
        "    }\n",
        ")\n",
        "\n",
        "print(filled_form)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 356
        },
        "id": "v2Mdp-u_lsEi",
        "outputId": "78bc96eb-74ed-4e9f-d3af-926bcb8f1261"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AuthenticationError",
          "evalue": "Error code: 401 - {'error': {'message': 'API key suspended due to insufficient credit. Register your payment method at https://console.upstage.ai/billing to continue.', 'type': 'invalid_request_error', 'param': '', 'code': 'api_key_is_not_allowed'}}",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAuthenticationError\u001b[0m                       Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-11-984fd799ebd5>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m filled_form = chain_mini.invoke(\n\u001b[0m\u001b[1;32m      2\u001b[0m     {\n\u001b[1;32m      3\u001b[0m         \u001b[0;34m\"my_info\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mmy_info\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m         \u001b[0;34m\"form_fields\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mform_fields\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     }\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain_core/runnables/base.py\u001b[0m in \u001b[0;36minvoke\u001b[0;34m(self, input, config, **kwargs)\u001b[0m\n\u001b[1;32m   3022\u001b[0m                     \u001b[0minput\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minvoke\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3023\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3024\u001b[0;31m                     \u001b[0minput\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minvoke\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3025\u001b[0m         \u001b[0;31m# finish the root run\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3026\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mBaseException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain_core/language_models/chat_models.py\u001b[0m in \u001b[0;36minvoke\u001b[0;34m(self, input, config, stop, **kwargs)\u001b[0m\n\u001b[1;32m    284\u001b[0m         return cast(\n\u001b[1;32m    285\u001b[0m             \u001b[0mChatGeneration\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 286\u001b[0;31m             self.generate_prompt(\n\u001b[0m\u001b[1;32m    287\u001b[0m                 \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_convert_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    288\u001b[0m                 \u001b[0mstop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstop\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain_core/language_models/chat_models.py\u001b[0m in \u001b[0;36mgenerate_prompt\u001b[0;34m(self, prompts, stop, callbacks, **kwargs)\u001b[0m\n\u001b[1;32m    784\u001b[0m     ) -> LLMResult:\n\u001b[1;32m    785\u001b[0m         \u001b[0mprompt_messages\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_messages\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mp\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mprompts\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 786\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgenerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprompt_messages\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstop\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcallbacks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcallbacks\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    787\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    788\u001b[0m     async def agenerate_prompt(\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain_core/language_models/chat_models.py\u001b[0m in \u001b[0;36mgenerate\u001b[0;34m(self, messages, stop, callbacks, tags, metadata, run_name, run_id, **kwargs)\u001b[0m\n\u001b[1;32m    641\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mrun_managers\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    642\u001b[0m                     \u001b[0mrun_managers\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_llm_error\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mLLMResult\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgenerations\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 643\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    644\u001b[0m         flattened_outputs = [\n\u001b[1;32m    645\u001b[0m             \u001b[0mLLMResult\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgenerations\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mres\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgenerations\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mllm_output\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mres\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mllm_output\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[list-item]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain_core/language_models/chat_models.py\u001b[0m in \u001b[0;36mgenerate\u001b[0;34m(self, messages, stop, callbacks, tags, metadata, run_name, run_id, **kwargs)\u001b[0m\n\u001b[1;32m    631\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    632\u001b[0m                 results.append(\n\u001b[0;32m--> 633\u001b[0;31m                     self._generate_with_cache(\n\u001b[0m\u001b[1;32m    634\u001b[0m                         \u001b[0mm\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    635\u001b[0m                         \u001b[0mstop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstop\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain_core/language_models/chat_models.py\u001b[0m in \u001b[0;36m_generate_with_cache\u001b[0;34m(self, messages, stop, run_manager, **kwargs)\u001b[0m\n\u001b[1;32m    849\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0minspect\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msignature\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_generate\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparameters\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"run_manager\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 851\u001b[0;31m                 result = self._generate(\n\u001b[0m\u001b[1;32m    852\u001b[0m                     \u001b[0mmessages\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstop\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrun_manager\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrun_manager\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m                 )\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain_upstage/chat_models.py\u001b[0m in \u001b[0;36m_generate\u001b[0;34m(self, messages, stop, run_manager, **kwargs)\u001b[0m\n\u001b[1;32m    236\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mgenerate_from_stream\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstream_iter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    237\u001b[0m         \u001b[0mpayload\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_request_payload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmessages\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstop\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 238\u001b[0;31m         \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclient\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mpayload\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    239\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_create_chat_result\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    240\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/openai/_utils/_utils.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    273\u001b[0m                         \u001b[0mmsg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34mf\"Missing required argument: {quote(missing[0])}\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    274\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 275\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    276\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    277\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m  \u001b[0;31m# type: ignore\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/openai/resources/chat/completions.py\u001b[0m in \u001b[0;36mcreate\u001b[0;34m(self, messages, model, audio, frequency_penalty, function_call, functions, logit_bias, logprobs, max_completion_tokens, max_tokens, metadata, modalities, n, parallel_tool_calls, prediction, presence_penalty, reasoning_effort, response_format, seed, service_tier, stop, store, stream, stream_options, temperature, tool_choice, tools, top_logprobs, top_p, user, extra_headers, extra_query, extra_body, timeout)\u001b[0m\n\u001b[1;32m    857\u001b[0m     ) -> ChatCompletion | Stream[ChatCompletionChunk]:\n\u001b[1;32m    858\u001b[0m         \u001b[0mvalidate_response_format\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse_format\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 859\u001b[0;31m         return self._post(\n\u001b[0m\u001b[1;32m    860\u001b[0m             \u001b[0;34m\"/chat/completions\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    861\u001b[0m             body=maybe_transform(\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/openai/_base_client.py\u001b[0m in \u001b[0;36mpost\u001b[0;34m(self, path, cast_to, body, options, files, stream, stream_cls)\u001b[0m\n\u001b[1;32m   1278\u001b[0m             \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"post\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mjson_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbody\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfiles\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mto_httpx_files\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiles\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1279\u001b[0m         )\n\u001b[0;32m-> 1280\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mResponseT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcast_to\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mopts\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstream\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstream\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstream_cls\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstream_cls\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1281\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1282\u001b[0m     def patch(\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/openai/_base_client.py\u001b[0m in \u001b[0;36mrequest\u001b[0;34m(self, cast_to, options, remaining_retries, stream, stream_cls)\u001b[0m\n\u001b[1;32m    955\u001b[0m             \u001b[0mretries_taken\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    956\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 957\u001b[0;31m         return self._request(\n\u001b[0m\u001b[1;32m    958\u001b[0m             \u001b[0mcast_to\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcast_to\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    959\u001b[0m             \u001b[0moptions\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/openai/_base_client.py\u001b[0m in \u001b[0;36m_request\u001b[0;34m(self, cast_to, options, retries_taken, stream, stream_cls)\u001b[0m\n\u001b[1;32m   1059\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1060\u001b[0m             \u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdebug\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Re-raising status error\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1061\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_status_error_from_response\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1062\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1063\u001b[0m         return self._process_response(\n",
            "\u001b[0;31mAuthenticationError\u001b[0m: Error code: 401 - {'error': {'message': 'API key suspended due to insufficient credit. Register your payment method at https://console.upstage.ai/billing to continue.', 'type': 'invalid_request_error', 'param': '', 'code': 'api_key_is_not_allowed'}}"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 시도"
      ],
      "metadata": {
        "id": "1f6CGtG_uH3b"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(eval(filled_form))\n",
        "print(type(eval(filled_form)))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KL8mH-Lhl46s",
        "outputId": "ceb4fedc-35be-4417-ad1f-9ce2b65bd014"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'1': ['연인', '마음', '시간'], '2': ['슬픔', '아쉬움', '혼란']}\n",
            "<class 'dict'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dict_form = eval(filled_form)\n",
        "\n",
        "for key, value in dict_form.items():\n",
        "  print(key,\":\", value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "y7oAopVsl6r1",
        "outputId": "f9a65077-14b6-4cc5-ae4f-56dd7be7bfc1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1 : ['연인', '마음', '시간']\n",
            "2 : ['슬픔', '아쉬움', '혼란']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dict_form['1']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xNiwKDgdnmzZ",
        "outputId": "18f98bc7-5f5e-4b9d-b9aa-b3ae7d4cb678"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['연인', '마음', '시간']"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dict_form['2']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MISOFHQCnshb",
        "outputId": "c9ada6fb-fe50-4c52-e3c8-5169f3940540"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['슬픔', '아쉬움', '혼란']"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "chartt = chart.copy()\n",
        "chartt['키워드'] = ''\n",
        "chartt['감정'] = ''\n",
        "\n",
        "chartt['키워드'][0] = dict_form['1']\n",
        "chartt['감정'][0] = dict_form['2']"
      ],
      "metadata": {
        "id": "9luGUgIxpMF1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 함수 정의"
      ],
      "metadata": {
        "id": "-PnrhTcJuKOK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def getting_tags(data):\n",
        "\n",
        "  data['키워드'] = ''\n",
        "  data['감정'] = ''\n",
        "\n",
        "  keywords = []\n",
        "  emotions = []\n",
        "\n",
        "  for i in list(data.index): # 슬라이싱해서 실행해야 함 -> len에서 index로 바꿈\n",
        "    my_info = data['가사'][i]\n",
        "\n",
        "    try:\n",
        "      filled_form = chain_mini.invoke(\n",
        "          {\"my_info\": my_info,\n",
        "          \"form_fields\": form_fields})\n",
        "\n",
        "      # print(filled_form)\n",
        "      filled_form_dic = eval(filled_form)\n",
        "\n",
        "      keywords.append(filled_form_dic['1'])\n",
        "      emotions.append(filled_form_dic['2'])\n",
        "\n",
        "    except:\n",
        "      print(f\"오류 발생! index : {i}\")\n",
        "      keywords.append(np.nan)\n",
        "      emotions.append(np.nan)\n",
        "\n",
        "    if i % 100 == 0:\n",
        "      print(f'진행상태 : {i}번째 완료')\n",
        "\n",
        "  data['키워드'] = keywords\n",
        "  data['감정'] = emotions\n",
        "\n",
        "  return data"
      ],
      "metadata": {
        "id": "1In1iMW1qXT4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def to_kor(data): # 한글 아닌 애들 + 길이 이상하게 나온 애들 + 오류 났던 애들 전부 한 번 더\n",
        "  for i in list(data.index):\n",
        "\n",
        "    key_list, feel_list = data['키워드'][i], data['감정'][i]\n",
        "    keys = [key for key in key_list if not re.search(r'[^ㄱ-ㅎ가-힣 ]', key)] # 한글+공백인 애들만 출력\n",
        "    feels = [feel for feel in feel_list if not re.search(r'[^ㄱ-ㅎ가-힣 ]', feel)] # 한글+공백인 애들만 출력\n",
        "\n",
        "    if len(keys) != len(key_list) or len(feels) != len(feel_list) or len(key_list) > 3 or len(feel_list) > 3:\n",
        "\n",
        "      my_info = data.loc[i,'가사']\n",
        "\n",
        "      filled_form = chain_mini.invoke(\n",
        "            {\"my_info\": my_info,\n",
        "            \"form_fields\": form_fields})\n",
        "      filled_form_dic = eval(filled_form)\n",
        "\n",
        "      # print(f\"{i}번째 {filled_form}\")\n",
        "\n",
        "      data['키워드'][i] = filled_form_dic['1']\n",
        "      data['감정'][i] = filled_form_dic['2']\n",
        "\n",
        "  return data"
      ],
      "metadata": {
        "id": "77MN2pJd3r3R"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def fill_na(data):\n",
        "\n",
        "  for i in list(data[data['키워드'].isna() | data['감정'].isna()].index):\n",
        "    my_info = data.loc[i,'가사'] # 오류 났던 가사 받아오기\n",
        "\n",
        "    filled_form = chain_mini.invoke(\n",
        "          {\"my_info\": my_info,\n",
        "          \"form_fields\": form_fields})\n",
        "\n",
        "    # print(filled_form) # NA 잘 사라졌는지 확인\n",
        "    filled_form_dic = eval(filled_form)\n",
        "\n",
        "    data['키워드'][i] = filled_form_dic['1']\n",
        "    data['감정'][i] = filled_form_dic['2']\n",
        "\n",
        "  return data"
      ],
      "metadata": {
        "id": "HIW3lTqB8aGF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def getting_and_correcting_tags(data1):\n",
        "\n",
        "  try:\n",
        "    data2 = fill_na(data1)\n",
        "    print(\"NA 채우기 완료\")\n",
        "  except:\n",
        "    print(\"NA 채우기 실패\")\n",
        "    return data1\n",
        "\n",
        "  try:\n",
        "    data3 = to_kor(data2)\n",
        "    print(\"한글로 변환 완료\")\n",
        "  except:\n",
        "    print(\"한글로 변환 실패\")\n",
        "    return data2\n",
        "\n",
        "  try:\n",
        "    data4 = fill_na(data3)\n",
        "    print(\"전체 완료\")\n",
        "  except:\n",
        "    print(\"마지막에서 실패\")\n",
        "    return data3\n",
        "\n",
        "  return data4"
      ],
      "metadata": {
        "id": "3gm-QakzGL0z"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Getting Tags~~"
      ],
      "metadata": {
        "id": "3m9deah6qXkP"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1000곡에 17분 정도"
      ],
      "metadata": {
        "id": "ezgeHPwo9Ba3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 18부터 다시 하세요\n",
        "playlist_32 = getting_tags(playlist[29000:30000])\n",
        "genre_tags = playlist_30.copy() # 1000개 노래 태그"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "-5XYS010hVXV",
        "outputId": "20923091-1fd7-46b3-f94a-ef5b2012bb31"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "진행상태 : 29000번째 완료\n",
            "오류 발생! index : 29051\n",
            "진행상태 : 29100번째 완료\n",
            "진행상태 : 29200번째 완료\n",
            "오류 발생! index : 29215\n",
            "오류 발생! index : 29282\n",
            "오류 발생! index : 29294\n",
            "진행상태 : 29300번째 완료\n",
            "오류 발생! index : 29316\n",
            "진행상태 : 29400번째 완료\n",
            "오류 발생! index : 29476\n",
            "진행상태 : 29500번째 완료\n",
            "진행상태 : 29600번째 완료\n",
            "진행상태 : 29700번째 완료\n",
            "오류 발생! index : 29705\n",
            "진행상태 : 29800번째 완료\n",
            "진행상태 : 29900번째 완료\n",
            "오류 발생! index : 29933\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#### 안 되면 이거 해\n",
        "playlist_30 = fill_na(genre_tags)\n",
        "playlist_30 = to_kor(playlist_30)\n",
        "playlist_30 = fill_na(playlist_30)"
      ],
      "metadata": {
        "id": "5D_vYGyK2Frh",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 332
        },
        "outputId": "73dd8693-0a27-4d9a-a049-29ba46895e55"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "list indices must be integers or slices, not str",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-27-30ddfb9938ce>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#### 안 되면 이거 해\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mplaylist_30\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfill_na\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgenre_tags\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mplaylist_30\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mto_kor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mplaylist_30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mplaylist_30\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfill_na\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mplaylist_30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-15-42acf4c8346e>\u001b[0m in \u001b[0;36mfill_na\u001b[0;34m(data)\u001b[0m\n\u001b[1;32m     11\u001b[0m     \u001b[0mfilled_form_dic\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0meval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilled_form\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m     \u001b[0mdata\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'키워드'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfilled_form_dic\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'1'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m     \u001b[0mdata\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'감정'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfilled_form_dic\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'2'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mTypeError\u001b[0m: list indices must be integers or slices, not str"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "playlist_30.to_pickle('/content/drive/MyDrive/2. KOREA UNIV./KUBIG/2024 Fall/추천시스템/Week 7 - 가사 키워드, 해시태그 모델/가사 키워드/playlist30.pickle')"
      ],
      "metadata": {
        "id": "hglvQpT5H47Q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "---------"
      ],
      "metadata": {
        "id": "ZYe2HY6KDC5q"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "## 여기부터 이어서 - 마지막이다~\n",
        "playlist_31 = getting_tags(playlist[30000:])\n",
        "genre_tags = playlist_31.copy() # 1000개 노래 태그"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "roIgxEk9Y7Ii",
        "outputId": "e7919ec5-8921-44b1-e221-4431101a5d18"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "진행상태 : 30000번째 완료\n",
            "오류 발생! index : 30070\n",
            "진행상태 : 30100번째 완료\n",
            "오류 발생! index : 30104\n",
            "오류 발생! index : 30113\n",
            "진행상태 : 30200번째 완료\n",
            "오류 발생! index : 30216\n",
            "진행상태 : 30300번째 완료\n",
            "오류 발생! index : 30379\n",
            "오류 발생! index : 30400\n",
            "진행상태 : 30400번째 완료\n",
            "오류 발생! index : 30423\n",
            "진행상태 : 30500번째 완료\n",
            "오류 발생! index : 30532\n",
            "오류 발생! index : 30546\n",
            "오류 발생! index : 30578\n",
            "진행상태 : 30600번째 완료\n",
            "진행상태 : 30700번째 완료\n",
            "오류 발생! index : 30729\n",
            "진행상태 : 30800번째 완료\n",
            "오류 발생! index : 30826\n",
            "진행상태 : 30900번째 완료\n",
            "진행상태 : 31000번째 완료\n",
            "오류 발생! index : 31035\n",
            "오류 발생! index : 31051\n",
            "진행상태 : 31100번째 완료\n",
            "진행상태 : 31200번째 완료\n",
            "오류 발생! index : 31228\n",
            "진행상태 : 31300번째 완료\n",
            "진행상태 : 31400번째 완료\n",
            "오류 발생! index : 31472\n",
            "진행상태 : 31500번째 완료\n",
            "진행상태 : 31600번째 완료\n",
            "진행상태 : 31700번째 완료\n",
            "진행상태 : 31800번째 완료\n",
            "오류 발생! index : 31821\n",
            "진행상태 : 31900번째 완료\n",
            "진행상태 : 32000번째 완료\n",
            "오류 발생! index : 32032\n",
            "진행상태 : 32100번째 완료\n",
            "오류 발생! index : 32154\n",
            "진행상태 : 32200번째 완료\n",
            "오류 발생! index : 32232\n",
            "진행상태 : 32300번째 완료\n",
            "오류 발생! index : 32357\n",
            "진행상태 : 32400번째 완료\n",
            "진행상태 : 32500번째 완료\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "playlist_31 = fill_na(genre_tags)\n",
        "playlist_31 = to_kor(playlist_31)\n",
        "playlist_31 = fill_na(playlist_31)"
      ],
      "metadata": {
        "id": "GbrXqgubY8jj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "playlist_31.to_pickle('/content/drive/MyDrive/2. KOREA UNIV./KUBIG/2024 Fall/추천시스템/Week 7 - 가사 키워드, 해시태그 모델/가사 키워드/playlist31.pickle')"
      ],
      "metadata": {
        "id": "D5L8N7LUZIz-"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
